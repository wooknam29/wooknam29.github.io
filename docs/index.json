[{"content":"问题梳理 1、切换分支/新打开项目，报java: 程序包com.tencent.beacon.plugins.xxxx.xxxx不存在\n原因：远程的包没有加载进来\n解决方法：\n（1）maven那里选择 ignore projects\n（2）invalidate caches 全部勾选，然后进来后到pom.xml下Reload projects，发现成功\n","permalink":"http://wooknam29.github.io/posts/tech/project/idea_build/","summary":"问题梳理 1、切换分支/新打开项目，报java: 程序包com.tencent.beacon.plugins.xxxx.xxxx不存在\n原因：远程的包没有加载进来\n解决方法：\n（1）maven那里选择 ignore projects\n（2）invalidate caches 全部勾选，然后进来后到pom.xml下Reload projects，发现成功","title":"idea编译问题"},{"content":"参考文档：https://v2.cn.vuejs.org/v2/guide/instance.html\nVUE实例 一个VUE实例 一个 Vue 应用由一个通过 new Vue 创建的根 Vue 实例，以及可选的嵌套的、可复用的组件树组成。\nVUE的数据与方法 vue实例被创建的时候，data中已property加入到vue的响应式系统中，“响应式的”。 Object.freeze()会阻止修改property。\nvue实例还有实例property和方法，带有前缀$ eg：\n// $watch 是一个实例方法 vm.$watch(\u0026#39;a\u0026#39;, function (newValue, oldValue) { // 这个回调将在 `vm.a` 改变后调用 }) 实例声明周期钩子 每个 Vue 实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等\n模板语法 插值 {{}}插值\n指令 指令的职责是，当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM\nv-on @ 监听DOM事件\nv-bind : 响应式的更新HTML attribute\n.prevent可修饰指令\n计算属性和侦听器 计算属性 计算属性缓存替代方法、侦听属性watch。 计算属性默认只有getter，可以设置setter。\n侦听器watch也有用的地方：等待一个异步操作\nClass 与 Style 绑定 v-bind:class v-bind:style\n条件渲染 v-if v-else\n\u0026lt;template\u0026gt;元素上使用 v-if 条件渲染分组 用 key 管理可复用的元素 列表渲染 v-for\n事件处理 表单输入绑定 v-model 组件基础 ","permalink":"http://wooknam29.github.io/posts/tech/ui-web/vue-start/","summary":"参考文档：https://v2.cn.vuejs.org/v2/guide/instance.html\nVUE实例 一个VUE实例 一个 Vue 应用由一个通过 new Vue 创建的根 Vue 实例，以及可选的嵌套的、可复用的组件树组成。\nVUE的数据与方法 vue实例被创建的时候，data中已property加入到vue的响应式系统中，“响应式的”。 Object.freeze()会阻止修改property。\nvue实例还有实例property和方法，带有前缀$ eg：\n// $watch 是一个实例方法 vm.$watch(\u0026#39;a\u0026#39;, function (newValue, oldValue) { // 这个回调将在 `vm.a` 改变后调用 }) 实例声明周期钩子 每个 Vue 实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等\n模板语法 插值 {{}}插值\n指令 指令的职责是，当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM\nv-on @ 监听DOM事件\nv-bind : 响应式的更新HTML attribute\n.prevent可修饰指令\n计算属性和侦听器 计算属性 计算属性缓存替代方法、侦听属性watch。 计算属性默认只有getter，可以设置setter。\n侦听器watch也有用的地方：等待一个异步操作\nClass 与 Style 绑定 v-bind:class v-bind:style\n条件渲染 v-if v-else\n\u0026lt;template\u0026gt;元素上使用 v-if 条件渲染分组 用 key 管理可复用的元素 列表渲染 v-for","title":"Vue入门"},{"content":"hello ","permalink":"http://wooknam29.github.io/about/","summary":"hello ","title":""}]