<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>nannan的博客</title>
    <link>http://wooknam29.github.io/</link>
    <description>Recent content on nannan的博客</description>
    <image>
      <title>nannan的博客</title>
      <url>http://wooknam29.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://wooknam29.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 21 Feb 2024 16:43:00 +0800</lastBuildDate>
    <atom:link href="http://wooknam29.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>spark</title>
      <link>http://wooknam29.github.io/posts/tech/data/spark/</link>
      <pubDate>Wed, 21 Feb 2024 16:43:00 +0800</pubDate>
      <guid>http://wooknam29.github.io/posts/tech/data/spark/</guid>
      <description></description>
    </item>
    <item>
      <title>MapReduce介绍</title>
      <link>http://wooknam29.github.io/posts/tech/data/mapreduce/</link>
      <pubDate>Wed, 21 Feb 2024 16:00:00 +0800</pubDate>
      <guid>http://wooknam29.github.io/posts/tech/data/mapreduce/</guid>
      <description></description>
    </item>
    <item>
      <title>大数据基本概念</title>
      <link>http://wooknam29.github.io/posts/tech/data/basic/</link>
      <pubDate>Tue, 20 Feb 2024 19:29:00 +0000</pubDate>
      <guid>http://wooknam29.github.io/posts/tech/data/basic/</guid>
      <description>数据湖和数据仓 Data Lake:它可以容纳结构化数据、半结构化数据和非结构化数据，包括关系型数据库、日志文件、图像、音频、视频等。数据湖通常采用延迟处理的方式，即将数据存储在原始形式下，只在需要时进行处理和转换。数据湖提供了灵活的数据存储和处理解决方案，适用于各种数据分析和处理需求。
Data Warehouse:是一个用于存储和管理已经经过清洗、集成和转换的结构化数据的存储库。数据仓库通常用于支持决策支持和业务智能的需求，提供了一种高度结构化和优化的数据存储和查询环境。数据仓库中的数据经过ETL（抽取、转换、加载）过程，以满足特定的分析和报告需求。
DWS: 数据仓库系统。存储和管理已经经过清洗、集成和转换的结构化数据的存储库。
DWD: 数据仓库设计。
几种数据导入方式 Routine Load: Broker Load: Spark Load: Stream Load:
bitmap indexing 位图索引 概念：用二进制01来表示某条记录的某列是否等于某个值
优点：在进行多个条件筛选的时候，可以直接使用多个bitmap进行与操作，减少了扫描的情况
适用场景：低基数情况、只读表和不频繁更新的表（存储和构建需要大量开销）、适合count distinct的场景、
CTEs common table expressions,常见表表达式（临时表）
用法：WITH xxx AS</description>
    </item>
    <item>
      <title>starrocks</title>
      <link>http://wooknam29.github.io/posts/tech/data/starrocks/</link>
      <pubDate>Tue, 20 Feb 2024 16:25:00 +0800</pubDate>
      <guid>http://wooknam29.github.io/posts/tech/data/starrocks/</guid>
      <description>特性和使用场景 特性 StarRocks 采用 MPP (Massively Parallel Processing) 大规模并行执行框架 MPP 计算模型实现：每个 task 被绑定到持有该数据的 Executor 上，由于 SR 表的分组分桶特性，数据会按 key 分组存储到节点上，相当于每个节点都拥有部分数据，那么使得单个查询请求可以充分利用所有执行节点的资源。
优点：充分利用所有执行节点资源
缺点：容易由于单节点速度形成短板效应
MapReduce 计算模型实现：每个 task 会被随机分配到空闲的 Executor 上，但是该节点可能并不持有数据，所以需要经过数据的 Shuffle （移动到空闲的计算节点）才能计算。 优点：推测执行可以避免单节点执行过慢问题
缺点：数据移动，落盘，资源申请等
全面向量化执行引擎
SIMD、批量按列执行
定制化的CBO优化器
估算每个算子的执行代价，选择代价最低的一条查询路径作为最终的物理查询计划。
该优化器内部实现了CTEs复用、相关子查询重写、Lateral Joins, Join Reordering、Join 分布式执行策略选择、低基数优化。
智能的物化加速视图
自动刷新无需外部维护调度任务，组织灵活，且能够在查询时进行 SQL 改写，最大程度使用物化结果集。
全面的湖仓分析能力
可以作为计算引擎，分析数据湖中的数据。
使用场景 OLAP多维分析、实时&amp;amp;统一数据查询。
实践 提升链路流转效益：
消费实时数据用Routine Load方式确保实现Exactly-Once语义，保证数据不丢不重。
离线转存数据通过Broker Load和Spark Load等方式导入，且都保证了导入的原子性。
湖仓融合:
StarRocks 提供两种类型 Catalog：internal catalog 和 external catalog，其中前者可以查询 SR 内表，后者可以访问数据湖表如 iceberg 表，以及传统数仓表如 hive 和 thive 表。</description>
    </item>
    <item>
      <title>骰子</title>
      <link>http://wooknam29.github.io/posts/read/star/touzi/</link>
      <pubDate>Mon, 19 Feb 2024 18:00:00 +0800</pubDate>
      <guid>http://wooknam29.github.io/posts/read/star/touzi/</guid>
      <description>1 行星： 太阳：人生观、自我认同、信心、主观意志
月亮：情绪、母亲、同情心、本能潜意识、情感状态、察觉
水星：沟通方式、价值观、学习好、聪明
金星：爱情、吸引力、美（女性）
火星：🌟关系、企图、改革（男性）
木星：人生目标、贵人、膨胀
土星：严厉的考验、限制和便捷、辫子
天王星：叛乱、科技和改革（水瓶座）
海王星：迷幻、爱情的泡沫、华丽的幻想
冥王星：感情的终结、毁灭、新生和创造的能量，模糊（天蝎）
南郊：业力、累世的经验/土星
北郊：未来的追求和目标
2 星座： 白羊座：乐观开朗、头部
金牛座：踏实、稳定的耕耘、喉咙（二宫）
双子座：思维跳跃、语出惊人、活泼、三心二意、表达、、双手和脊椎、内部循环
巨蟹座：居家、情感细腻、心脏和胸部、胃
狮子座：自大、领导力和权威感、好面子、血管和心肺
处女座：心思细腻、分析、考虑周全、谦卑、稳定、肠胃脾
天秤座：优雅得体、沟通能力、平衡、协调、深思熟虑、肾
天蝎座：极端、x器官
射手座：崇尚自由、灵敏、奔放自由、向外探索、🍑大腿（木星）
摩羯座：收缩的能量、低调有想法、吃苦耐劳、注意实际、有耐心、工作狂、细致、对外冷漠、骨骼牙齿
水瓶座：革新、独立、小腿和脚踝
双鱼座：内向、包容、海纳百川、难以揣测、艺术、脚和精神健康/大脑、大补
3 宫位： ✨一宫 本身拥有的一切自己拥有的一切
✨二宫 财帛宫，你的钱财，你身边的钱财，一加一等于二，你的生活方式.钱财、物质条件和生活方式
✨三宫 兄弟姐妹宫，社交宫，从小玩到大的发小闺蜜，高考之前的教育。对应短途旅行，和九宫对立，个人心智形成。兄弟姐妹、社交、发小和闺蜜、高考前的教育、短途旅行、心智和三观的基本形成
✨四宫 原生家庭，女生对爸爸，男生对妈妈。房屋，建筑信息，不是后天组建的，是先天家庭。原生家庭、（儿-母、女-父）、不动产
✨五宫 谈恋爱好不好，看五宫。娱乐、创造力、恋爱情况、休闲
✨六宫 短期，和十二宫长期疾病不同。日常工作形式，日常疾病。疾厄、健康、短期疾病、日常工作
✨七宫 夫妻宫，一对一合作伙伴，夫妻等长久关系。。一对一/夫妻关系、合作伙伴契约关系、长久关系等等
✨八宫 对宫概念，对应你伴侣的二宫。八宫是别人的钱财，能不能理财看八宫，疾厄宫秘密宫，死亡角，视觉盲区，对别人资源（别人的一切）的利用。你的钱二宫，别人的钱八宫。伴侣的二宫、伴侣的钱、别人的钱财、理财、秘密、视觉盲区、别人资源的利用、珍贵资料
✨九宫 高等教育，长途跋涉，出国旅行，玄学信仰追求，一直往上学习，高考之后的提升都是九宫。高等教育、长途跋涉、搬家、出国、宗教和神秘学（九年教育之后再往上的学习）
✨十宫 社会地位，社会名声。社会地位、事业、工作的展示
✨十一宫 福利，朋友圈子，粉丝类型，所交往，所在的圈层。福利、社交、朋友类型、交往的圈子
✨十二宮 1秘密宮，也对应小人，监狱，灾难，更多是包容的，长时间秘密反映十二宫。难讲，按具体事。。隐藏、小人、灾难、长期的秘密、包容、灵性、宿命感、无边界​</description>
    </item>
    <item>
      <title>idea编译问题</title>
      <link>http://wooknam29.github.io/posts/tech/project/idea_build/</link>
      <pubDate>Wed, 07 Feb 2024 15:05:28 +0800</pubDate>
      <guid>http://wooknam29.github.io/posts/tech/project/idea_build/</guid>
      <description>问题梳理 1、切换分支/新打开项目，报java: 程序包com.tencent.beacon.plugins.xxxx.xxxx不存在
原因：远程的包没有加载进来
解决方法：
（1）maven那里选择 ignore projects
（2）invalidate caches 全部勾选，然后进来后到pom.xml下Reload projects，发现成功</description>
    </item>
    <item>
      <title>Vue入门</title>
      <link>http://wooknam29.github.io/posts/tech/ui-web/vue-start/</link>
      <pubDate>Wed, 07 Jun 2023 15:05:28 +0800</pubDate>
      <guid>http://wooknam29.github.io/posts/tech/ui-web/vue-start/</guid>
      <description>参考文档：https://v2.cn.vuejs.org/v2/guide/instance.html
VUE实例 一个VUE实例 一个 Vue 应用由一个通过 new Vue 创建的根 Vue 实例，以及可选的嵌套的、可复用的组件树组成。
VUE的数据与方法 vue实例被创建的时候，data中已property加入到vue的响应式系统中，“响应式的”。 Object.freeze()会阻止修改property。
vue实例还有实例property和方法，带有前缀$ eg：
// $watch 是一个实例方法 vm.$watch(&amp;#39;a&amp;#39;, function (newValue, oldValue) { // 这个回调将在 `vm.a` 改变后调用 }) 实例声明周期钩子 每个 Vue 实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等
模板语法 插值 {{}}插值
指令 指令的职责是，当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM
v-on @ 监听DOM事件
v-bind : 响应式的更新HTML attribute
.prevent可修饰指令
计算属性和侦听器 计算属性 计算属性缓存替代方法、侦听属性watch。 计算属性默认只有getter，可以设置setter。
侦听器watch也有用的地方：等待一个异步操作
Class 与 Style 绑定 v-bind:class v-bind:style
条件渲染 v-if v-else
&amp;lt;template&amp;gt;元素上使用 v-if 条件渲染分组 用 key 管理可复用的元素 列表渲染 v-for</description>
    </item>
    <item>
      <title></title>
      <link>http://wooknam29.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://wooknam29.github.io/about/</guid>
      <description>nannan 出生年份: 1997
家乡: 内蒙古
现居地: 广东深圳
毕业学校: 哈尔滨工业大学
专业: 计算机科学与技术
职业： 后台开发
MBTI: ISTJ-A-C</description>
    </item>
  </channel>
</rss>
